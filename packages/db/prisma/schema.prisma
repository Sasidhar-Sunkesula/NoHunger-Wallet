generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RestaurantList {
  resId Int  @id @unique
  menu  Json
}

model Cart {
  id        Int         @id @default(autoincrement())
  userId    Int
  createdAt DateTime  @default(now())
  user      User        @relation(fields: [userId], references: [id])
  CartItems CartItems[]
}

model Items {
  id        Int         @id
  item_name String
  img_url   String
  cost      Int
  rating    Float
  CartItems CartItems[]
}

model CartItems {
  id     Int   @id @default(autoincrement())
  cartId Int
  itemId Int
  cart   Cart  @relation(fields: [cartId], references: [id])
  Items  Items @relation(fields: [itemId], references: [id])
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String?             @unique
  name              String?
  number            String              @unique
  password          String
  Cart              Cart[]
  OnRampTransaction OnRampTransaction[]
  Balance           Balance[]
  sentTransfers     p2pTransfer[]       @relation(name: "FromUserRelation")
  receivedTransfers p2pTransfer[]       @relation(name: "ToUserRelation")
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model p2pTransfer {
  id         Int      @id @default(autoincrement())
  amount     Int
  timestamp  DateTime
  fromUserId Int
  fromUser   User     @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId   Int
  toUser     User     @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
